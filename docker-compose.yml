name: reina

services:
  nginx:
    container_name: nginx
    image: "nginx:bookworm"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./_docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - .:/var/www/reina
      - ./_docker/cert/Certificate.crt:/etc/ssl/certs/reina.online/Certificate.crt:ro
      - ./_docker/cert/PrivateKey.key:/etc/ssl/private/reina.online/PrivateKey.key:ro
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
      - php
    networks:
      - reina_network

  php:
    container_name: php
    build:
      context: .
      dockerfile: _docker/php/php.Dockerfile
    volumes:
      - .:/var/www/reina
    restart: unless-stopped
    networks:
      - reina_network
# docker exec -it php /bin/sh -c "chmod -R 755 /var/www/reina/public && chown -R www-data:www-data /var/www/reina/public"
# docker-compose exec php php artisan

  postgres:
    container_name: postgres
    image: postgres:bookworm
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - reina_network

  redis:
    container_name: redis
    build:
      context: .
      dockerfile: _docker/redis/redis.Dockerfile
    ports:
      - '6379:6379'
    volumes:
      - 'redis_data:/data'
    restart: unless-stopped
    networks:
      - reina_network

  node:
    container_name: node
    build:
      context: .
      dockerfile: _docker/dockerfiles/node.Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./:/var/www/reina
      - ./_docker/cert/Certificate.crt:/etc/ssl/certs/reina.online/Certificate.crt:ro
      - ./_docker/cert/PrivateKey.key:/etc/ssl/private/reina.online/PrivateKey.key:ro
    tty: true
    networks:
      - reina_network
# docker-compose exec node npm install
# docker-compose exec node npm run dev
# docker run --rm --dns=1.1.1.1 --dns=8.8.8.8 --net=host cloudflare/cloudflared:latest tunnel --url http://localhost:80

volumes:
  postgres_data:
  redis_data:

networks:
  reina_network:
    driver: bridge
